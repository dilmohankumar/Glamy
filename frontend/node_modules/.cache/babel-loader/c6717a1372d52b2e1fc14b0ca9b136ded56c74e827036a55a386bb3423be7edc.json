{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/glamy/frontend/src/pages/glamyai.js\",\n  _s = $RefreshSig$();\nimport \"./glamyai.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotChat = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hello! Click on a question below or type your own query.\",\n    sender: \"bot\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n  const sendMessage = userInput => {\n    if (!userInput.trim()) return;\n\n    // User ka message show kare\n    const userMessage = {\n      text: userInput,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, userMessage]);\n\n    // Check if question exists in predefined list\n    const foundQuestion = questionsList.find(q => q.question.toLowerCase() === userInput.toLowerCase());\n    const botReplyText = foundQuestion ? foundQuestion.answer : \"I'm not sure about that. Can you rephrase?\";\n    setTimeout(() => {\n      const botReply = {\n        text: botReplyText,\n        sender: \"bot\"\n      };\n      setMessages(prev => [...prev, botReply]);\n    }, 1000);\n  };\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Common Questions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), questionsList.slice(0, 2).map((q, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.preventDefault();\n          sendMessage(q.question);\n        },\n        className: \"question-btn\",\n        children: q.question\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          x: msg.sender === \"user\" ? 50 : -50\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        transition: {\n          duration: 0.3\n        },\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && sendMessage(input),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.preventDefault();\n          sendMessage(input);\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(BotChat, \"nS7ou5DEgHqZ10D6YSJ6ESCpegs=\");\n_c = BotChat;\nexport default BotChat;\nvar _c;\n$RefreshReg$(_c, \"BotChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","jsxDEV","_jsxDEV","BotChat","_s","messages","setMessages","text","sender","input","setInput","messagesEndRef","sendMessage","userInput","trim","userMessage","prev","foundQuestion","questionsList","find","q","question","toLowerCase","botReplyText","answer","setTimeout","botReply","_messagesEndRef$curre","current","scrollIntoView","behavior","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","index","onClick","e","preventDefault","msg","div","initial","opacity","x","animate","transition","duration","ref","type","value","onChange","target","onKeyDown","key","placeholder","_c","$RefreshReg$"],"sources":["/Users/macbookpro/Desktop/glamy/frontend/src/pages/glamyai.js"],"sourcesContent":["import \"./glamyai.css\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { motion } from \"framer-motion\";\n\n\n\nconst BotChat = () => {\n  const [messages, setMessages] = useState([\n    { text: \"Hello! Click on a question below or type your own query.\", sender: \"bot\" },\n  ]);\n  const [input, setInput] = useState(\"\");\n  const messagesEndRef = useRef(null);\n\n  const sendMessage = (userInput) => {\n    if (!userInput.trim()) return;\n\n    // User ka message show kare\n    const userMessage = { text: userInput, sender: \"user\" };\n    setMessages((prev) => [...prev, userMessage]);\n\n    // Check if question exists in predefined list\n    const foundQuestion = questionsList.find(q => q.question.toLowerCase() === userInput.toLowerCase());\n    const botReplyText = foundQuestion ? foundQuestion.answer : \"I'm not sure about that. Can you rephrase?\";\n\n    setTimeout(() => {\n      const botReply = { text: botReplyText, sender: \"bot\" };\n      setMessages((prev) => [...prev, botReply]);\n    }, 1000);\n  };\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"questions\">\n        <h3>Common Questions:</h3>\n        {questionsList.slice(0, 2).map((q, index) => (\n          <button key={index} onClick={(e) => { e.preventDefault(); sendMessage(q.question) }} className=\"question-btn\">\n            {q.question}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"messages\">\n        {messages.map((msg, index) => (\n          <motion.div\n            key={index}\n            initial={{ opacity: 0, x: msg.sender === \"user\" ? 50 : -50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.3 }}\n            className={`message ${msg.sender}`}\n          >\n            {msg.text}\n          </motion.div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={(e) => e.key === \"Enter\" && sendMessage(input)}\n          placeholder=\"Type a message...\"\n        />\n        <button onClick={(e) => { e.preventDefault(); sendMessage(input) }}>Send</button>\n      </div>\n    </div>\n  );\n};\n\nexport default BotChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}