{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/glamy/frontend/src/pages/glamyai.js\",\n  _s = $RefreshSig$();\nimport \"./glamyai.css\";\nimport React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotChat = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hello! How can I help you?\",\n    sender: \"bot\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n\n    // Bot response after 1 second\n    setTimeout(() => {\n      const botReply = {\n        text: \"I'm a bot! Your message was: \" + input,\n        sender: \"bot\"\n      };\n      setMessages(prev => [...prev, botReply]);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      style: styles.messages,\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          x: msg.sender === \"user\" ? 50 : -50\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        transition: {\n          duration: 0.3\n        },\n        style: {\n          ...styles.message,\n          ...(msg.sender === \"user\" ? styles.user : styles.bot)\n        },\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      style: styles.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\",\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: styles.button,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n// Inline styles for quick styling\n_s(BotChat, \"cK0Cndwd1ps3D9pyFcNfw6YeC6U=\");\n_c = BotChat;\nconst styles = {\n  container: {\n    width: \"300px\",\n    margin: \"auto\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"8px\",\n    padding: \"10px\"\n  },\n  messages: {\n    maxHeight: \"300px\",\n    overflowY: \"auto\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"10px\"\n  },\n  message: {\n    padding: \"8px\",\n    borderRadius: \"5px\",\n    maxWidth: \"70%\",\n    wordWrap: \"break-word\"\n  },\n  user: {\n    alignSelf: \"flex-end\",\n    backgroundColor: \"#007bff\",\n    color: \"#fff\"\n  },\n  bot: {\n    alignSelf: \"flex-start\",\n    backgroundColor: \"#f1f1f1\",\n    color: \"#000\"\n  },\n  inputContainer: {\n    display: \"flex\",\n    marginTop: \"10px\"\n  },\n  input: {\n    flex: 1,\n    padding: \"8px\",\n    borderRadius: \"5px\",\n    border: \"1px solid #ccc\"\n  },\n  button: {\n    marginLeft: \"5px\",\n    padding: \"8px\",\n    border: \"none\",\n    backgroundColor: \"#007bff\",\n    color: \"white\",\n    cursor: \"pointer\"\n  }\n};\nexport default BotChat;\nvar _c;\n$RefreshReg$(_c, \"BotChat\");","map":{"version":3,"names":["React","useState","motion","jsxDEV","_jsxDEV","BotChat","_s","messages","setMessages","text","sender","input","setInput","sendMessage","trim","userMessage","prev","setTimeout","botReply","className","style","styles","container","children","map","msg","index","div","initial","opacity","x","animate","transition","duration","message","user","bot","fileName","_jsxFileName","lineNumber","columnNumber","inputContainer","type","value","onChange","e","target","placeholder","onClick","button","_c","width","margin","border","borderRadius","padding","maxHeight","overflowY","display","flexDirection","gap","maxWidth","wordWrap","alignSelf","backgroundColor","color","marginTop","flex","marginLeft","cursor","$RefreshReg$"],"sources":["/Users/macbookpro/Desktop/glamy/frontend/src/pages/glamyai.js"],"sourcesContent":["\nimport \"./glamyai.css\"\nimport React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst BotChat = () => {\n  const [messages, setMessages] = useState([\n    { text: \"Hello! How can I help you?\", sender: \"bot\" }\n  ]);\n  const [input, setInput] = useState(\"\");\n\n  const sendMessage = () => {\n    if (!input.trim()) return;\n\n    const userMessage = { text: input, sender: \"user\" };\n    setMessages((prev) => [...prev, userMessage]);\n    setInput(\"\");\n\n    // Bot response after 1 second\n    setTimeout(() => {\n      const botReply = { text: \"I'm a bot! Your message was: \" + input, sender: \"bot\" };\n      setMessages((prev) => [...prev, botReply]);\n    }, 1000);\n  };\n\n  return (\n    <div className=\"chat-container\" style={styles.container}>\n      <div className=\"messages\" style={styles.messages}>\n        {messages.map((msg, index) => (\n          <motion.div\n            key={index}\n            initial={{ opacity: 0, x: msg.sender === \"user\" ? 50 : -50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ duration: 0.3 }}\n            style={{ ...styles.message, ...(msg.sender === \"user\" ? styles.user : styles.bot) }}\n          >\n            {msg.text}\n          </motion.div>\n        ))}\n      </div>\n      <div className=\"input-container\" style={styles.inputContainer}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type a message...\"\n          style={styles.input}\n        />\n        <button onClick={sendMessage} style={styles.button}>Send</button>\n      </div>\n    </div>\n  );\n};\n\n// Inline styles for quick styling\nconst styles = {\n  container: { width: \"300px\", margin: \"auto\", border: \"1px solid #ccc\", borderRadius: \"8px\", padding: \"10px\" },\n  messages: { maxHeight: \"300px\", overflowY: \"auto\", display: \"flex\", flexDirection: \"column\", gap: \"10px\" },\n  message: { padding: \"8px\", borderRadius: \"5px\", maxWidth: \"70%\", wordWrap: \"break-word\" },\n  user: { alignSelf: \"flex-end\", backgroundColor: \"#007bff\", color: \"#fff\" },\n  bot: { alignSelf: \"flex-start\", backgroundColor: \"#f1f1f1\", color: \"#000\" },\n  inputContainer: { display: \"flex\", marginTop: \"10px\" },\n  input: { flex: 1, padding: \"8px\", borderRadius: \"5px\", border: \"1px solid #ccc\" },\n  button: { marginLeft: \"5px\", padding: \"8px\", border: \"none\", backgroundColor: \"#007bff\", color: \"white\", cursor: \"pointer\" }\n};\n\nexport default BotChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}