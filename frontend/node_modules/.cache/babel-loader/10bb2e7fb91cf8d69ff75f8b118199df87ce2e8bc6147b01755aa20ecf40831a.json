{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/glamy/frontend/src/pages/glamyai.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotUI = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const handleSendMessage = () => {\n    if (input.trim() !== \"\") {\n      const newMessages = [...messages, {\n        text: input,\n        isUser: true\n      }];\n      setMessages(newMessages);\n      setInput(\"\");\n      setTimeout(() => {\n        setMessages([...newMessages, {\n          text: \"Hello Can't help you right know..\",\n          isUser: false\n        }]);\n      }, 1000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BotContainer, {\n    children: /*#__PURE__*/_jsxDEV(ChatBox, {\n      children: [/*#__PURE__*/_jsxDEV(MessagesContainer, {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n          isUser: msg.isUser,\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"Type a message...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && handleSendMessage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SendButton, {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(BotUI, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = BotUI;\nexport default BotUI;\nvar _c;\n$RefreshReg$(_c, \"BotUI\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BotUI","_s","messages","setMessages","input","setInput","handleSendMessage","trim","newMessages","text","isUser","setTimeout","BotContainer","children","ChatBox","MessagesContainer","map","msg","index","Message","fileName","_jsxFileName","lineNumber","columnNumber","InputContainer","Input","type","placeholder","value","onChange","e","target","onKeyDown","key","SendButton","onClick","_c","$RefreshReg$"],"sources":["/Users/macbookpro/Desktop/glamy/frontend/src/pages/glamyai.js"],"sourcesContent":["import React, { useState } from \"react\";\n\n\n\n\nconst BotUI = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  const handleSendMessage = () => {\n    if (input.trim() !== \"\") {\n      const newMessages = [...messages, { text: input, isUser: true }];\n      setMessages(newMessages);\n      setInput(\"\");\n\n      setTimeout(() => {\n        setMessages([...newMessages, { text: \"Hello Can't help you right know..\", isUser: false }]);\n      }, 1000);\n    }\n  };\n\n  return (\n    <BotContainer>\n      <ChatBox>\n        <MessagesContainer>\n          {messages.map((msg, index) => (\n            <Message key={index} isUser={msg.isUser}>\n              {msg.text}\n            </Message>\n          ))}\n        </MessagesContainer>\n        <InputContainer>\n          <Input\n            type=\"text\"\n            placeholder=\"Type a message...\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyDown={(e) => e.key === \"Enter\" && handleSendMessage()}\n          />\n          <SendButton onClick={handleSendMessage}>Send</SendButton>\n        </InputContainer>\n      </ChatBox>\n    </BotContainer>\n  );\n};\n\nexport default BotUI;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAKxC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIF,KAAK,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvB,MAAMC,WAAW,GAAG,CAAC,GAAGN,QAAQ,EAAE;QAAEO,IAAI,EAAEL,KAAK;QAAEM,MAAM,EAAE;MAAK,CAAC,CAAC;MAChEP,WAAW,CAACK,WAAW,CAAC;MACxBH,QAAQ,CAAC,EAAE,CAAC;MAEZM,UAAU,CAAC,MAAM;QACfR,WAAW,CAAC,CAAC,GAAGK,WAAW,EAAE;UAAEC,IAAI,EAAE,mCAAmC;UAAEC,MAAM,EAAE;QAAM,CAAC,CAAC,CAAC;MAC7F,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,oBACEX,OAAA,CAACa,YAAY;IAAAC,QAAA,eACXd,OAAA,CAACe,OAAO;MAAAD,QAAA,gBACNd,OAAA,CAACgB,iBAAiB;QAAAF,QAAA,EACfX,QAAQ,CAACc,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBnB,OAAA,CAACoB,OAAO;UAAaT,MAAM,EAAEO,GAAG,CAACP,MAAO;UAAAG,QAAA,EACrCI,GAAG,CAACR;QAAI,GADGS,KAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACe,CAAC,eACpBxB,OAAA,CAACyB,cAAc;QAAAX,QAAA,gBACbd,OAAA,CAAC0B,KAAK;UACJC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,mBAAmB;UAC/BC,KAAK,EAAExB,KAAM;UACbyB,QAAQ,EAAGC,CAAC,IAAKzB,QAAQ,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC1CI,SAAS,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAI3B,iBAAiB,CAAC;QAAE;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC,eACFxB,OAAA,CAACmC,UAAU;UAACC,OAAO,EAAE7B,iBAAkB;UAAAO,QAAA,EAAC;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEnB,CAAC;AAACtB,EAAA,CAvCID,KAAK;AAAAoC,EAAA,GAALpC,KAAK;AAyCX,eAAeA,KAAK;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}