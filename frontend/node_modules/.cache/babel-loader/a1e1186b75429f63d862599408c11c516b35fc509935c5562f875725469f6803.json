{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/glamy/frontend/src/pages/glamyai.js\",\n  _s = $RefreshSig$();\nimport \"./glamyai.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BotChart = () => {\n  _s();\n  const [data, setData] = useState([{\n    name: \"Jan\",\n    value: 0\n  }, {\n    name: \"Feb\",\n    value: 0\n  }, {\n    name: \"Mar\",\n    value: 0\n  }, {\n    name: \"Apr\",\n    value: 0\n  }, {\n    name: \"May\",\n    value: 0\n  }]);\n  useEffect(() => {\n    let count = 0;\n    const interval = setInterval(() => {\n      setData(prevData => prevData.map(d => ({\n        ...d,\n        value: Math.floor(Math.random() * 100) // Random data points\n      })));\n      count++;\n      if (count > 10) clearInterval(interval); // Stop animation after 10 updates\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"value\",\n        stroke: \"#8884d8\",\n        strokeWidth: 2,\n        dot: {\n          r: 6\n        },\n        animationDuration: 500\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(BotChart, \"57YOYGHYScayy+Iz/MN62he68D8=\");\n_c = BotChart;\nexport default BotChart;\nvar _c;\n$RefreshReg$(_c, \"BotChart\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","BotChart","_s","data","setData","name","value","count","interval","setInterval","prevData","map","d","Math","floor","random","clearInterval","width","height","children","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","type","stroke","strokeWidth","dot","r","animationDuration","_c","$RefreshReg$"],"sources":["/Users/macbookpro/Desktop/glamy/frontend/src/pages/glamyai.js"],"sourcesContent":["\nimport \"./glamyai.css\"\n\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\n\nconst BotChart = () => {\n  const [data, setData] = useState([\n    { name: \"Jan\", value: 0 },\n    { name: \"Feb\", value: 0 },\n    { name: \"Mar\", value: 0 },\n    { name: \"Apr\", value: 0 },\n    { name: \"May\", value: 0 },\n  ]);\n\n  useEffect(() => {\n    let count = 0;\n    const interval = setInterval(() => {\n      setData((prevData) =>\n        prevData.map((d) => ({\n          ...d,\n          value: Math.floor(Math.random() * 100), // Random data points\n        }))\n      );\n      count++;\n      if (count > 10) clearInterval(interval); // Stop animation after 10 updates\n    }, 1000);\n    \n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={300}>\n      <LineChart data={data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" strokeWidth={2} dot={{ r: 6 }} animationDuration={500} />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nexport default BotChart;\n"],"mappings":";;AACA,OAAO,eAAe;AAEtB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,aAAa,EAAEC,OAAO,EAAEC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtG,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAC/B;IAAEe,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,CAC1B,CAAC;EAEFf,SAAS,CAAC,MAAM;IACd,IAAIgB,KAAK,GAAG,CAAC;IACb,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCL,OAAO,CAAEM,QAAQ,IACfA,QAAQ,CAACC,GAAG,CAAEC,CAAC,KAAM;QACnB,GAAGA,CAAC;QACJN,KAAK,EAAEO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAE;MAC1C,CAAC,CAAC,CACJ,CAAC;MACDR,KAAK,EAAE;MACP,IAAIA,KAAK,GAAG,EAAE,EAAES,aAAa,CAACR,QAAQ,CAAC,CAAC,CAAC;IAC3C,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMQ,aAAa,CAACR,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA,CAACF,mBAAmB;IAACmB,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAI;IAAAC,QAAA,eAC5CnB,OAAA,CAACR,SAAS;MAACW,IAAI,EAAEA,IAAK;MAAAgB,QAAA,gBACpBnB,OAAA,CAACJ,aAAa;QAACwB,eAAe,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCxB,OAAA,CAACN,KAAK;QAAC+B,OAAO,EAAC;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxBxB,OAAA,CAACL,KAAK;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACTxB,OAAA,CAACH,OAAO;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXxB,OAAA,CAACP,IAAI;QAACiC,IAAI,EAAC,UAAU;QAACD,OAAO,EAAC,OAAO;QAACE,MAAM,EAAC,SAAS;QAACC,WAAW,EAAE,CAAE;QAACC,GAAG,EAAE;UAAEC,CAAC,EAAE;QAAE,CAAE;QAACC,iBAAiB,EAAE;MAAI;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE1B,CAAC;AAACtB,EAAA,CApCID,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}