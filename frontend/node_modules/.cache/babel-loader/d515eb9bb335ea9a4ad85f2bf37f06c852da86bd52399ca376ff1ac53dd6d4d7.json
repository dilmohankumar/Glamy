{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/glamy/frontend/src/pages/glamyblog.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport OpenAI from \"openai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst openai = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY,\n  // Use .env for security\n  dangerouslyAllowBrowser: true // ⚠️ Only use in frontend testing\n});\nconst AIPage = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n    try {\n      const response = await openai.chat.completions.create({\n        model: \"gpt-3.5-turbo\",\n        messages: [{\n          role: \"user\",\n          content: input\n        }],\n        max_tokens: 100\n      });\n      const botReply = response.choices[0].message.content;\n      setMessages([...messages, {\n        text: input,\n        sender: \"user\"\n      }, {\n        text: botReply,\n        sender: \"bot\"\n      }]);\n    } catch (error) {\n      console.error(\"OpenAI Error:\", error);\n    }\n    setLoading(false);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AI Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: msg.sender,\n        children: msg.text\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Ask something...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      disabled: loading,\n      children: loading ? \"Thinking...\" : \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(AIPage, \"FpfR4LFmT6AFISP10oyeCF5r9c0=\");\n_c = AIPage;\nexport default AIPage;\nvar _c;\n$RefreshReg$(_c, \"AIPage\");","map":{"version":3,"names":["React","useState","OpenAI","jsxDEV","_jsxDEV","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","dangerouslyAllowBrowser","AIPage","_s","messages","setMessages","input","setInput","loading","setLoading","handleSend","trim","response","chat","completions","create","model","role","content","max_tokens","botReply","choices","message","text","sender","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","i","className","type","value","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/macbookpro/Desktop/glamy/frontend/src/pages/glamyblog.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport OpenAI from \"openai\";\n\nconst openai = new OpenAI({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY, // Use .env for security\n  dangerouslyAllowBrowser: true, // ⚠️ Only use in frontend testing\n});\n\nconst AIPage = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    setLoading(true);\n\n    try {\n      const response = await openai.chat.completions.create({\n        model: \"gpt-3.5-turbo\",\n        messages: [{ role: \"user\", content: input }],\n        max_tokens: 100,\n      });\n\n      const botReply = response.choices[0].message.content;\n      setMessages([...messages, { text: input, sender: \"user\" }, { text: botReply, sender: \"bot\" }]);\n    } catch (error) {\n      console.error(\"OpenAI Error:\", error);\n    }\n\n    setLoading(false);\n    setInput(\"\");\n  };\n\n  return (\n    <div>\n      <h2>AI Chatbot</h2>\n      <div>\n        {messages.map((msg, i) => (\n          <p key={i} className={msg.sender}>{msg.text}</p>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Ask something...\"\n      />\n      <button onClick={handleSend} disabled={loading}>{loading ? \"Thinking...\" : \"Send\"}</button>\n    </div>\n  );\n};\n\nexport default AIPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}